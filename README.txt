# pattern
pattern舉實例

1.Singleton -> 在同一個時間上只能有一個物件
    
一個類別只有一個實例
    
舉例:名牌，每個人都只會有一個自己的名牌



2.Factory -> Client端透過factory來建立物件
    
舉例:蓋房子，蓋房子都是先蓋基底，在立柱子，再慢慢在外殼上去

        

3.Factory Method -> 將Factory抽象化，讓每個子類別都有屬於自己工廠的類別
    
舉例:買麵，肚子餓想吃麵，可以不用自己去煮麵，去買店家做好現成的
 
       

4.Prototype -> 利用這個原型去產生物件，使用的方法是用clone
    
舉例:全家的加盟店，很多間但都是以同一種模式去開店



5.Adapter -> 單純轉接(透過代理人去做)，介面格式不同,但方法相同
    
舉例:iphone手機的線是ＵＳＢ的頭，經過豆腐頭的轉接就可以插電充電了



6.Bridge ->透過介面來找方法去做，介面格式相同，但實作方法不同
    
舉例:寫作業，可以用原子筆．鉛筆．自動筆



7.Decorator -> 可以透過多層的Decorator物件來擴充主物件
    
舉例:蓋飯,飯+洋蔥+蛋+肉



8.Facade -> 將多種的類別包裝成一個大型的類別
    
舉例:一間公司，分很多部門，人事部，程式設計部．．．．



9.Observer -> 物件之間的一對多關係，當一個物件改變狀態，其他相依者都會收到通知並自動被更新
    舉例:youtube可以自行訂閱，訂閱的資訊會隨時更新



10.Command ->封裝請求，然後進行一系列的參數化或操作
    
舉例:眼球，可以往左看．往下看．往上看．往右看．轉圈圈
